/// This file is generated by Weaver 0.9.13
/// DO NOT EDIT!
import API
import Foundation
import WeaverDI
// MARK: - PersonManager
protocol PersonManagerInputDependencyResolver {
    var movieAPI: APIProtocol { get }
}
protocol PersonManagerDependencyResolver {
    var movieAPI: APIProtocol { get }
    var logger: Logger { get }
}
final class PersonManagerDependencyContainer: PersonManagerDependencyResolver {
    let movieAPI: APIProtocol
    var logger: Logger { 
        return loggerRef.value
    }
    private lazy var loggerRef = Instance<Logger>(scope: .graph) { [unowned self] in
        return Logger()
    }
    init(injecting dependencies: PersonManagerInputDependencyResolver) {
        movieAPI = dependencies.movieAPI
        _ = loggerRef.value
    }
}
protocol PersonManagerDependencyInjectable {
    init(injecting dependencies: PersonManagerDependencyResolver)
}