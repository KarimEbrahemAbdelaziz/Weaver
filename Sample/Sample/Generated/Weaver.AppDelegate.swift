/// This file is generated by Weaver 0.9.13
/// DO NOT EDIT!
import API
import UIKit
import WeaverDI
// MARK: - AppDelegate
final class AppDelegateDependencyContainer: DependencyContainer {
    init() {
        super.init()
    }
    override func registerDependencies(in store: DependencyStore) {
        store.register(Logger.self, scope: .container, name: "logger", builder: { (dependencies) in
            return Logger()
        })
        store.register(URLSession.self, scope: .container, name: "urlSession", builder: { (dependencies) in
            return self.urlSessionCustomRef()
        })
        store.register(APIProtocol.self, scope: .container, name: "movieAPI", builder: { (dependencies) in
            return self.movieAPICustomRef()
        })
        store.register(ImageManaging.self, scope: .container, name: "imageManager", builder: { (dependencies) in
            return self.imageManagerCustomRef()
        })
        store.register(MovieManaging.self, scope: .container, name: "movieManager", builder: { (dependencies) in
            return self.movieManagerCustomRef()
        })
        store.register(UIViewController.self, scope: .container, name: "homeViewController", builder: { (dependencies) in
            return HomeViewController.makeHomeViewController(injecting: dependencies)
        })
        store.register(ReviewManaging.self, scope: .container, name: "reviewManager", builder: { (dependencies) in
            return ReviewManager.makeReviewManager(injecting: dependencies)
        })
    }
}
protocol AppDelegateDependencyResolver {
    var logger: Logger { get }
    var urlSession: URLSession { get }
    var movieAPI: APIProtocol { get }
    var imageManager: ImageManaging { get }
    var movieManager: MovieManaging { get }
    var homeViewController: UIViewController { get }
    var reviewManager: ReviewManaging { get }
    func urlSessionCustomRef() -> URLSession
    func movieAPICustomRef() -> APIProtocol
    func imageManagerCustomRef() -> ImageManaging
    func movieManagerCustomRef() -> MovieManaging
}
extension AppDelegateDependencyContainer: AppDelegateDependencyResolver {
    var logger: Logger {
        return resolve(Logger.self, name: "logger")
    }
    var urlSession: URLSession {
        return resolve(URLSession.self, name: "urlSession")
    }
    var movieAPI: APIProtocol {
        return resolve(APIProtocol.self, name: "movieAPI")
    }
    var imageManager: ImageManaging {
        return resolve(ImageManaging.self, name: "imageManager")
    }
    var movieManager: MovieManaging {
        return resolve(MovieManaging.self, name: "movieManager")
    }
    var homeViewController: UIViewController {
        return resolve(UIViewController.self, name: "homeViewController")
    }
    var reviewManager: ReviewManaging {
        return resolve(ReviewManaging.self, name: "reviewManager")
    }
}